"tosca.nodes.Compute":
  - attributes:
      private_address: "kubernetes.nodes.Service.properties.spec.clusterIP"
      public_address: "kubernetes.nodes.Service.properties.spec.externalIPs"
    networks:
      error: true
      reason: "networks not supported in Kubernetes"
    ports:
      error: true
      reason: "ports not supported in Kubernetes"
    capabilities:
      host.properties:
        num_cpus:
          parameter: "kubernetes.nodes.Deployment.properties.spec"
          value:
            parameter: "kubernetes.datatypes.ServiceSpec.properties.clusterIP"
            value: "{self[value]}"
        cpu_frequency:
          error: true
          reason: "cpu_frequency not supported in Kubernetes"
        disk_size:
          error: true
          reason: "disk_size not supported in Kubernetes"
#        mem_size:
#          - parameter: "kubernetes.nodes.Deployment.properties.spec.template.spec.containers"
#            value:
#              - paraneter: resources
#                value:
#                  paraneter: limits.memory
#                  value: "{self[value]}"

      endpoint.properties:
        protocol:
          parameter: "kubernetes.nodes.Service.properties.spec.ports"
          value:
            - parameter: protocol
              value: "{self[value]}"
        port:
          - parameter: "kubernetes.nodes.Service.properties.spec.ports"
            value:
              - parameter: nodePort
                value: "{self[value]}"
          - parameter: "kubernetes.nodes.Deployment.properties.spec.template.spec.containers"
            value:
            - parameter: ports
              value:
                - parameter: containerPort
                  value: "{self[value]}"
        port_name:
          - parameter: "kubernetes.nodes.Service.properties.spec.ports"
            value:
              - parameter: targetPort
                value: "{self[name]}-ports"
          - parameter: "kubernetes.nodes.Service.properties.spec.selector.matchLabels"
            value:
              app: "{self[name]}"
          - parameter: "kubernetes.nodes.Deployment.properties.spec.template.spec.containers"
            value:
              - parameter: ports
                value:
                  - parameter: name
                    value: "{self[name]}-ports"
        secure:
          error: true
          reason: "secure not supported in Kubernetes"
        url_path:
          error: true
          reason: "url_path not supported in Kubernetes"
        network_name:
          error: true
          reason: "network_name not supported in Kubernetes"
        initiator:
          error: true
          reason: "initiator not supported in Kubernetes"
        ports:
          error: true
          reason: "ports not supported in Kubernetes"
      os.properties:
        - architecture:
            error: true
            reason: "not supported in Kubernetes"
          type:
            parameter: "{self[buffer][image]}"
            value: "{self[value]}"
          distribution:
            parameter: "{self[buffer][image]}"
            value: "{self[value]}"
          version:
            parameter: "{self[buffer][tag]}"
            value: ":{self[value]}"
        - parameter: "kubernetes.nodes.Deployment.properties.spec.template.spec.containers"
          value:
            - parameter: image
              value: "{self[buffer][image]}{self[buffer][tag]}"
        - parameter: "kubernetes.nodes.Deployment.properties.metadata.name"
          value: "{self[name]}-deployment"
        - parameter: "kubernetes.nodes.Deployment.properties.spec.selector.matchLabels"
          value:
            app: "{self[name]}"
        - parameter: "kubernetes.nodes.Deployment.properties.spec.template.metadata.labels"
          value:
            app: "{self[name]}"
        - parameter: "kubernetes.nodes.Deployment.properties.spec.template.spec.containers"
          value:
            - parameter: name
              value: "{self[name]}-container"
      scalable.properties:
        max_instances:
          error: true
          reason: "max_instances not supported in Kubernetes"
        min_instances: "kubernetes.nodes.Deployment.properties.spec.replicas"