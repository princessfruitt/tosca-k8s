tosca_definitions_version: tosca_simple_yaml_1_0

node_types:
  kubernetes.nodes.Root:
    derived_from: tosca.nodes.Root
  kubernetes.node.Deployment:
    derived_from: kubernetes.nodes.Root
    properties:
      metadata:
        description: Standard object's metadata.
        type: kubernetes.datatypes.Metadata
        required: false
      spec:
        type: kubernetes.datatypes.DeploymentSpec
        required: false
  kubernetes.node.Pod:
    derived_from: kubernetes.nodes.Root
    properties:
      metadata:
        description: Standard object's metadata.
        type: kubernetes.datatypes.Metadata
        required: false
      spec:
        type: kubernetes.datatypes.PodSpec
        required: false
  kubernetes.node.Service:
    derived_from: kubernetes.nodes.Root
    properties:
      metadata:
        description: Standard object's metadata.
        type: kubernetes.datatypes.Metadata
        required: false
      spec:
        type: kubernetes.datatypes.ServiceSpec
        required: false

data_types:

  kubernetes.datatypes.Root:
    derived_from: tosca.datatypes.Root
  kubernetes.datatypes.ObjectMeta:
    derived_from: kubernetes.datatypes.Root
    properties:
      label:
        type: map
        required: false

  kubernetes.datatypes.ServiceSpec:
    derived_from: kubernetes.datatypes.Root
    properties:
      clusterIP:
        description: clusterIP is the IP address of the service and is usually assigned randomly by the master. If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail. This field can not be changed through updates. Valid values are "None", empty string (""), or a valid IP address. "None" can be specified for headless services when proxying is not required.
        type: string
        required: false
      externalIPs:
        description: externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system.
        type: list
        entry_schema:
          type: string
        required: false
      ports:
        description: externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service. These IPs are not managed by Kubernetes. The user is responsible for ensuring that traffic arrives at a node with this IP. A common example is external load-balancers that are not part of the Kubernetes system.
        type: list
        entry_schema:
          type: kubernetes.datatypes.ServicePort
        required: false

  kubernetes.datatypes.ServicePort:
    derived_from:  kubernetes.datatypes.Root
    properties:
      name:
        description: The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.
        type: string
        required: false
      port:
        description: The port that will be exposed by this service.
        type: integer
        required: false
        constraints:
          - in_range: [1, 65535]
      targetPort:
        description: Name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field.
        type: string
        required: false

  kubernetes.datatypes.PodSpec:
    derived_from: kubernetes.datatypes.Root
    properties:
      containers:
        description: List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
        type: kubernetes.datatypes.Container
        required: false

  kubernetes.datatypes.Container:
    derived_from:  kubernetes.datatypes.Root
    properties:
      image:
        description: Docker image name. More info https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
        type: string
        constraints:
          - pattern: (?<image>.*)\/(?<distribution>.*)\:(?<version>.*)
        required: false
      resources:
        description: Compute Resources required by this container. Cannot be updated.
        type: kubernetes.datatypes.ResourceRequirements
        required: false
      args:
        description: Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.
        type: list
        entry_schema:
          type: string
        required: false

  kubernetes.datatypes.ResourceRequirements:
    derived_from:  kubernetes.datatypes.Root
    properties:
      limits:
        description: Limits describes the maximum amount of compute resources allowed.
        type: kubernetes.datatypes.Limits
        required: false

  kubernetes.datatypes.Limits:
    derived_from:  kubernetes.datatypes.Root
    properties:
      cpu:
        description: The CPU resource is measured in cpus.
        type: scalar-unit.frequency
        required: false
        constraints:
          - greater_or_equal: 0.1 GHz
      memory:
        description: The RAM resource is measured in bytes.
        type:  scalar-unit.size
        required: false
        constraints:
          - greater_or_equal: 0 MB

  kubernetes.datatypes.DeploymentSpec:
    derived_from: kubernetes.datatypes.Root
    properties:
      strategy:
        description: The deployment strategy to use to replace existing pods with new ones.
        type: kubernetes.datatypes.DeploymentStrategy
        required: false
      replicas:
        description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
        type: integer
        required: false
        default: 1
        constraints:
          - greater_or_equal: 0

  kubernetes.datatypes.DeploymentStrategy:
    derived_from:  kubernetes.datatypes.Root
    properties:
      type:
        description: Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
        type: string
        default: RollingUpdate
        constraints:
          - RollingUpdate
      rollingUpdate:
        description: Rolling update config params. Present only if DeploymentStrategyType = RollingUpdate.
        type: kubernetes.datatypes.RollingUpdateDeployment
        required: true

  kubernetes.datatypes.RollingUpdateDeployment:
    derived_from:  kubernetes.datatypes.Root
    properties:
      maxUnavailable:
        description: The maximum number of pods that can be unavailable during the update.
        type: integer
        required: false
        constraints:
          - greater_or_equal: 1
      maxSurge:
        description: The maximum number of pods that can be scheduled above the desired number of pods.
        type: integer
        required: false
        constraints:
          - greater_or_equal: 1
